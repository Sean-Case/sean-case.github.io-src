tch.dem.change.cast.simple = dcast(tch.dem.change.melt, tch_prop_split ~variable, mean,na.rm=T)
colnames(tch.dem.change.cast.simple) = c("AVC Edge machines used by > 25% of voters?","Change in Turnout percent (%)")
kable(tch.dem.change.cast.simple,digits = 1, format = "markdown",padding = 0, align = "c")
tch.dem.change.cast = dcast(tch.dem.change.melt, demwinner2012+tch_prop_split ~variable, mean,na.rm=T)
colnames(tch.dem.change.cast) = c("Won by Democrats in 2012","AVC Edge machines used by > 25% of voters?","Change in Turnout percent (%)")
kable(tch.dem.change.cast,digits = 1, format = "markdown",padding = 0, align = "c")
p.find.table.fire.read = read_docx("Republican table 22-04-17.docx")
p.find.table.fire = docx_extract_all_tbls(p.find.table.fire.read)
p.find.table.df = data.frame(p.find.table.fire)
colnames(p.find.table.df) = c("Independent variable","Republican presidential vote 2012","Trump spring primary 2016",
"Trump vote change primary to 2016 presidential election",
"Republican presidential vote 2016", "Turnout percent change presidential 2012 to 2016"
)
kable(p.find.table.df[1:3,], format = "markdown",padding = 0, align = "c")
p.vote.method = p.find.table.df[(4:8),]
rownames(p.vote.method) = NULL
kable(p.vote.method, format = "markdown",padding = 0, align = "c")
p.vote.demo = p.find.table.df[(9:17),]
rownames(p.vote.demo) = NULL
kable(p.vote.demo, format = "markdown",padding = 0, align = "c")
p.vote.vote = p.find.table.df[(18:23),]
rownames(p.vote.vote) = NULL
kable(p.vote.vote, format = "markdown",padding = 0, align = "c")
model.o.df$os_use_off = as.factor(model.o.df$os_use_off)
model.o.df$tch_use_off_true = as.factor(model.o.df$tch_use_off_true)
model.o.df$county = as.factor(model.o.df$county)
model.o.df$demwinner2012 = as.factor(model.o.df$demwinner2012)
model.o.df$tch_prop_split = as.factor(model.o.df$tch_prop_split)
model.o.df$density_levels = as.factor(model.o.df$density_levels)
model.o.df$turnout_levels = as.factor(model.o.df$turnout_levels)
dem.tchuse.density.percvote = ggplot(data = model.o.df[!is.na(model.o.df$tch_prop_2012)& !is.na(model.o.df$demwinner2012),],
aes(x = tch_prop_2012,
y = turnout_reg_2012, colour = demwinner2012,
group = demwinner2012)) +
#shape = factor(tch_model_off))) +
geom_point(size = 1, alpha = 0.3,stroke = 2,pch = 21) +
geom_smooth(alpha = 0.5,size = 1) +
scale_y_continuous(name = "Turnout percent 2012 (%)") +
scale_x_continuous(name = "Proportion of votes from use of Sequoia AVC Edge voting machines")+
# scale_fill_discrete(name = "
#                     Population density (ppl / km2) in municipality (log, people / km)") +
scale_colour_discrete(name = "Democrat won in 2012") +
#facet_wrap(~demwinner2012,nrow=1) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
dem.tchuse.density.percvote
tch.dem.change.melt = with(model.o.df[!is.na(model.o.df$tch_prop_demprim) & !is.na(model.o.df$demwinner2012) & !is.na(model.o.df$tch_prop_split),], melt(data.frame(demwinner2012,tch_prop_split,turnout_reg_2012)))
tch.dem.change.cast.simple = dcast(tch.dem.change.melt, tch_prop_split ~variable, mean,na.rm=T)
colnames(tch.dem.change.cast.simple) = c("AVC Edge machines used by > 25% of voters?","Turnout percent (%)")
kable(tch.dem.change.cast.simple,digits = 1, format = "markdown",padding = 0, align = "c")
tch.dem.change.cast = dcast(tch.dem.change.melt, demwinner2012+tch_prop_split ~variable, mean,na.rm=T)
colnames(tch.dem.change.cast) = c("Won by Democrats in 2012","AVC Edge machines used by > 25% of voters?","Turnout percent (%)")
kable(tch.dem.change.cast,digits = 1, format = "markdown",padding = 0, align = "c")
# tch.demwin.dem.change.melt = with(model.o.df[!is.na(model.o.df$tch_prop_2012) & !is.na(model.o.df$density_levels) & !is.na(model.o.df$demwinner2012) & !is.na(model.o.df$tch_prop_split),], melt(data.frame(tch_prop_split,demwinner2012,density_levels,dem.perc2012)))
#     tch.demwin.dem.change.cast = dcast(tch.demwin.dem.change.melt, density_levels+tch_prop_split~demwinner2012+variable, mean,na.rm=T)
#     colnames(tch.demwin.dem.change.cast) = c("Population density (ppl / km2)","AVC Edge machines used by > 25% of voters?","Vote Republicans 2012 (%) - areas Dem lost 2012","Vote Republicans 2012 (%) - areas Dem won 2012")
# kable(tch.demwin.dem.change.cast,digits = 1, format = "markdown",padding = 0, align = "c")
model_formula = formula(turnout_reg_2012 ~ total_ballots_2012 + #+ os_use_off
muni.dense + pct_male + pct_black + inc_2015 + unemp_rate + oth.perc2012 +
age_med + pct_latino + pct_white +
pct_graduate + rejected_absent_prop_2012 + counted_absent_prop_2012 + late_registrants_2012 + tch_prop_2012)
# ols1 = lm(model_formula, data = model.o.df, na.action = na.exclude)
# summary(ols1)
# AIC(ols1)
ols2 <- ols(model_formula, data=model.o.df, x=TRUE, y=TRUE)
# print(ols2)
# Second, the cluster-robust covariance is called
cov <- robcov(ols2, cluster=model.o.df$county)
print(cov)
# print(cov$var)
# AIC(cov)
model.o.df$os_use_off = as.factor(model.o.df$os_use_off)
model.o.df$tch_use_off_true = as.factor(model.o.df$tch_use_off_true)
model.o.df$county = as.factor(model.o.df$county)
model.o.df$demwinner2012 = as.factor(model.o.df$demwinner2012)
model.o.df$tch_prop_split = as.factor(model.o.df$tch_prop_split)
model.o.df$density_levels = as.factor(model.o.df$density_levels)
model.o.df$turnout_levels = as.factor(model.o.df$turnout_levels)
dem.tchuse.density.percvote = ggplot(data = model.o.df[                  !is.na(model.o.df$tch_prop)& !is.na(model.o.df$demwinner2012),],
aes(x = tch_prop,
y = turnout_reg_feb , colour = demwinner2012,
group = demwinner2012)) +
#shape = factor(tch_model_off))) +
geom_point(size = 1, alpha = 0.3,stroke = 2,pch = 21) +
geom_smooth(alpha = 0.5,size = 1) +
scale_y_continuous(name = "Turnout percent 2016 (%)") +
scale_x_continuous(name = "Proportion of votes from use of Sequoia AVC Edge voting machines")+
# scale_fill_discrete(name = "
#                     Population density (ppl / km2) in municipality (log, people / km)") +
scale_colour_discrete(name = "Democrat won in 2012") +
#facet_wrap(~demwinner2012,nrow=1) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
dem.tchuse.density.percvote
tch.dem.change.melt = with(model.o.df[!is.na(model.o.df$tch_prop) & !is.na(model.o.df$demwinner2012) & !is.na(model.o.df$tch_prop_split),], melt(data.frame(demwinner2012, density_levels,tch_prop_split,turnout_reg_feb )))
tch.dem.change.cast.simple = dcast(tch.dem.change.melt, tch_prop_split ~variable, mean,na.rm=T)
colnames(tch.dem.change.cast.simple) = c("AVC Edge machines used by > 25% of voters?","Turnout percent (%)")
kable(tch.dem.change.cast.simple,digits = 1, format = "markdown",padding = 0, align = "c")
tch.dem.change.cast = dcast(tch.dem.change.melt, demwinner2012+tch_prop_split ~variable, mean,na.rm=T)
colnames(tch.dem.change.cast) = c("Won by Democrats in 2012","AVC Edge machines used by > 25% of voters?","Turnout percent (%)")
kable(tch.dem.change.cast,digits = 1, format = "markdown",padding = 0, align = "c")
# tch.demwin.dem.change.melt = with(model.o.df[!is.na(model.o.df$tch_prop) & !is.na(model.o.df$density_levels) & !is.na(model.o.df$demwinner2012) & !is.na(model.o.df$tch_prop_split),], melt(data.frame(tch_prop_split,demwinner2012,density_levels,turnout_reg_feb )))
#     tch.demwin.dem.change.cast = dcast(tch.demwin.dem.change.melt, density_levels+tch_prop_split~demwinner2012+variable, mean,na.rm=T)
#     colnames(tch.demwin.dem.change.cast) = c("Population density (ppl / km2)","AVC Edge machines used by > 25% of voters?","Vote Republicans 2016 (%) - areas Dem lost 2012","Vote Republicans 2016 (%) - areas Dem won 2012")
# kable(tch.demwin.dem.change.cast,digits = 1, format = "markdown",padding = 0, align = "c")
model_formula = formula(turnout_reg_feb  ~ total_ballots + #+ os_use_off
muni.dense + pct_male + pct_black + inc_2015 + unemp_rate + oth.perc2012 +
age_med + pct_latino + pct_white  + sameday_reg_prop +
tch_prop + pct_graduate  + rejected_absent_prop + counted_absent_prop +
dem.perc2012 + late_registrants + votes_perc_sanders_demprim + votes_perc_other_demprim + turnout_perc_reprim + votes_perc_other_reprim + tch_prop_2012_2016_diff + tch_prop_reprim_diff
)
# ols1 = lm(model_formula, data = model.o.df, na.action = na.exclude)
# summary(ols1)
# AIC(ols1)
ols2 <- ols(model_formula, data=model.o.df, x=TRUE, y=TRUE)
# print(ols2)
# Second, the cluster-robust covariance is called
cov <- robcov(ols2, cluster=model.o.df$county)
print(cov)
# print(cov$var)
# AIC(cov)
model.o.df$os_use_off = as.factor(model.o.df$os_use_off)
model.o.df$tch_use_off_true = as.factor(model.o.df$tch_use_off_true)
model.o.df$county = as.factor(model.o.df$county)
model.o.df$demwinner2012 = as.factor(model.o.df$demwinner2012)
model.o.df$tch_prop_split = as.factor(model.o.df$tch_prop_split)
model.o.df$density_levels = as.factor(model.o.df$density_levels)
model.o.df$turnout_levels = as.factor(model.o.df$turnout_levels)
dem.tchuse.density.percvote = ggplot(data = model.o.df[                  !is.na(model.o.df$tch_prop)& !is.na(model.o.df$demwinner2012),],
aes(x = tch_prop,
y = turnout_change_1216, colour = demwinner2012,
group = demwinner2012)) +
#shape = factor(tch_model_off))) +
geom_point(alpha = 0.3,stroke = 2,pch = 21) +
geom_smooth(alpha = 0.5,size = 1) +
scale_y_continuous(name = "Turnout percent change 2012 - 2016 (%)") +
scale_x_continuous(name = "Proportion of votes from use of Sequoia AVC Edge voting machines")+
# scale_fill_discrete(name = "
#                     Population density (ppl / km2) in municipality (log, people / km)") +
scale_colour_discrete(name = "Won by Democrats in 2012") +
#facet_wrap(~demwinner2012,nrow=1) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
dem.tchuse.density.percvote
tch.dem.change.melt = with(model.o.df[!is.na(model.o.df$tch_prop) & !is.na(model.o.df$demwinner2012) & !is.na(model.o.df$tch_prop_split),], melt(data.frame(demwinner2012, density_levels,tch_prop_split,turnout_change_1216)))
tch.dem.change.cast.simple = dcast(tch.dem.change.melt, tch_prop_split ~variable, mean,na.rm=T)
colnames(tch.dem.change.cast.simple) = c("AVC Edge machines used by > 25% of voters?","Change in Turnout percent (%)")
kable(tch.dem.change.cast.simple,digits = 1, format = "markdown",padding = 0, align = "c")
tch.dem.change.cast = dcast(tch.dem.change.melt, demwinner2012+tch_prop_split ~variable, mean,na.rm=T)
colnames(tch.dem.change.cast) = c("Won by Democrats in 2012","AVC Edge machines used by > 25% of voters?","Change in Turnout percent (%)")
kable(tch.dem.change.cast,digits = 1, format = "markdown",padding = 0, align = "c")
model_formula2 = formula(turnout_change_1216 ~ total_ballots + #+ os_use_off
muni.dense + pct_male + pct_black + inc_2015 + unemp_rate + oth.perc2012 +
age_med + pct_latino + pct_white + sameday_reg_prop +
tch_prop + pct_graduate + rejected_absent_prop + counted_absent_prop +
dem.perc2012 + late_registrants + tch_prop +
votes_perc_sanders_demprim + votes_perc_other_demprim + turnout_perc_reprim + votes_perc_other_reprim + tch_prop_2012_2016_diff + tch_prop_reprim_diff)
# ols1 = lm(model_formula, data = model.o.df, na.action = na.exclude)
# summary(ols1)
# AIC(ols1)
ols22 <- ols(model_formula2, data=model.o.df, x=TRUE, y=TRUE)
# print(ols2)
# Second, the cluster-robust covariance is called
cov <- robcov(ols22, cluster=model.o.df$county)
print(cov)
# print(cov$var)
# AIC(cov)
# cor(model.o.df$turnout_change_1216, model.o.df$turnout_reg_feb ,method="pearson")
model.o.df$os_use_off = as.factor(model.o.df$os_use_off)
model.o.df$tch_use_off_true = as.factor(model.o.df$tch_use_off_true)
model.o.df$county = as.factor(model.o.df$county)
model.o.df$demwinner2012 = as.factor(model.o.df$demwinner2012)
model.o.df$tch_prop_split = as.factor(model.o.df$tch_prop_split)
model.o.df$density_levels = as.factor(model.o.df$density_levels)
model.o.df$turnout_levels = as.factor(model.o.df$turnout_levels)
dem.tchuse.density.percvote = ggplot(data = model.o.df[                 !is.na(model.o.df$tch_prop_reprim)& !is.na(model.o.df$demwinner2012),],
aes(x = tch_prop_reprim,
y = turnout_perc_reprim, colour = demwinner2012,
group = demwinner2012)) +
#shape = factor(tch_model_off))) +
geom_point(alpha = 0.3,stroke = 2,pch = 21) +
geom_smooth(alpha = 0.5,size = 1) +
scale_y_continuous(name = "Votes for Trump in Republican primary (%)") +
scale_x_continuous(name = "Proportion of votes from use of Sequoia AVC Edge voting machines")+
# scale_fill_discrete(name = "
#                     Population density (ppl / km2) in municipality (log, people / km)") +
scale_colour_discrete(name = "Democrat won in 2012") +
#facet_wrap(~demwinner2012,nrow=1) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
dem.tchuse.density.percvote
tch.dem.change.melt = with(model.o.df[!is.na(model.o.df$tch_prop_reprim) & !is.na(model.o.df$demwinner2012) & !is.na(model.o.df$tch_prop_split),], melt(data.frame(demwinner2012,tch_prop_split,turnout_perc_reprim)))
tch.dem.change.cast.simple = dcast(tch.dem.change.melt, tch_prop_split ~variable, mean,na.rm=T)
colnames(tch.dem.change.cast.simple) = c("AVC Edge machines used by > 25% of voters?","Votes for Trump in Republican primary (%)")
kable(tch.dem.change.cast.simple,digits = 1, format = "markdown",padding = 0, align = "c")
tch.dem.change.cast = dcast(tch.dem.change.melt, demwinner2012+tch_prop_split ~variable, mean,na.rm=T)
colnames(tch.dem.change.cast) = c("Won by Democrats in 2012","AVC Edge machines used by > 25% of voters?","Votes for Trump in Republican primary (%)")
kable(tch.dem.change.cast,digits = 1, format = "markdown",padding = 0, align = "c")
# tch.demwin.dem.change.melt = with(model.o.df[!is.na(model.o.df$tch_prop_reprim) & !is.na(model.o.df$density_levels) & !is.na(model.o.df$demwinner2012) & !is.na(model.o.df$tch_prop_split),], melt(data.frame(tch_prop_split,demwinner2012,density_levels,turnout_perc_reprim)))
#     tch.demwin.dem.change.cast = dcast(tch.demwin.dem.change.melt, density_levels+tch_prop_split~demwinner2012+variable, mean,na.rm=T)
#     colnames(tch.demwin.dem.change.cast) = c("Population density (ppl / km2)","AVC Edge machines used by > 25% of voters?","Vote Republicans 2016 (%) - areas Dem lost 2012","Vote Republicans 2016 (%) - areas Dem won 2012")
# kable(tch.demwin.dem.change.cast,digits = 1, format = "markdown",padding = 0, align = "c")
model_formula = formula(turnout_perc_reprim ~ total_ballots_reprim +
muni.dense + pct_male + pct_black + inc_2015 + unemp_rate +
age_med + pct_latino + pct_white + sameday_reg_prop_reprim + pct_graduate + rejected_absent_prop_reprim + counted_absent_prop_reprim + late_registrants_reprim + dem.perc2012 + oth.perc2012 + tch_prop_reprim)
# ols1 = lm(model_formula, data = model.o.df, na.action = na.exclude)
# summary(ols1)
# AIC(ols1)
ols2 <- ols(model_formula, data=model.o.df, x=TRUE, y=TRUE)
# print(ols2)
# Second, the cluster-robust covariance is called
cov <- robcov(ols2, cluster=model.o.df$county)
print(cov)
# print(cov$var)
AIC(cov)
model.o.df$os_use_off = as.factor(model.o.df$os_use_off)
model.o.df$tch_use_off_true = as.factor(model.o.df$tch_use_off_true)
model.o.df$county = as.factor(model.o.df$county)
model.o.df$demwinner2012 = as.factor(model.o.df$demwinner2012)
model.o.df$tch_prop_split = as.factor(model.o.df$tch_prop_split)
model.o.df$density_levels = as.factor(model.o.df$density_levels)
model.o.df$turnout_levels = as.factor(model.o.df$turnout_levels)
dem.tchuse.density.percvote = ggplot(data = model.o.df[!is.na(model.o.df$demwinner2012) &                  !is.na(model.o.df$tch_prop)& !is.na(model.o.df$demwinner2012),],
aes(x = tch_prop,
y = turnout_change_prim, colour = demwinner2012,
group = demwinner2012)) +
#shape = factor(tch_model_off))) +
geom_point(alpha = 0.3,stroke = 2,pch = 21) +
geom_smooth(alpha = 0.5,size = 1) +
scale_y_continuous(name = "Change in Trump vote between primary and election (%)") +
scale_x_continuous(name = "Proportion of votes from use of Sequoia AVC Edge voting machines")+
# scale_fill_discrete(name = "
#                     Democrat won in 2012 in municipality (log, people / km)") +
scale_colour_discrete(name = "Democrat won in 2012") +
#facet_wrap(~demwinner2012,nrow=1) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
dem.tchuse.density.percvote
tch.dem.change.melt = with(model.o.df[!is.na(model.o.df$tch_prop_reprim) & !is.na(model.o.df$demwinner2012) & !is.na(model.o.df$tch_prop_split),], melt(data.frame(demwinner2012,tch_prop_split,turnout_change_prim)))
tch.dem.change.cast.simple = dcast(tch.dem.change.melt, tch_prop_split ~variable, mean,na.rm=T)
colnames(tch.dem.change.cast.simple) = c("AVC Edge machines used by > 25% of voters?","Change in Trump vote (%)")
kable(tch.dem.change.cast.simple,digits = 1, format = "markdown",padding = 0, align = "c")
tch.dem.change.cast = dcast(tch.dem.change.melt, demwinner2012+tch_prop_split ~variable, mean,na.rm=T)
colnames(tch.dem.change.cast) = c("Won by Democrats in 2012","AVC Edge machines used by > 25% of voters?","Change in Trump vote (%)")
kable(tch.dem.change.cast,digits = 1, format = "markdown",padding = 0, align = "c")
# tch.demwin.dem.change.melt = with(model.o.df[!is.na(model.o.df$tch_prop) & !is.na(model.o.df$demwinner2012) & !is.na(model.o.df$demwinner2012) & !is.na(model.o.df$tch_prop_split),], melt(data.frame(tch_prop_split,density_levels,demwinner2012,turnout_change_prim)))
#     tch.demwin.dem.change.cast = dcast(tch.demwin.dem.change.melt, density_levels+tch_prop_split~demwinner2012+variable, mean,na.rm=T)
#     colnames(tch.demwin.dem.change.cast) = c("Population density (ppl / km2)","AVC Edge machines used by > 25% of voters?","Vote change (%) - areas Dem lost 2012","Vote change (%) - areas Dem won 2012")
# kable(tch.demwin.dem.change.cast,digits = 1, format = "markdown",padding = 0, align = "c")
model_formula = formula(turnout_change_prim ~  total_ballots + #+ os_use_off
muni.dense + pct_male + pct_black + inc_2015 + unemp_rate + pct_graduate +
age_med + pct_latino + pct_white + sameday_reg_prop +  rejected_absent_prop + counted_absent_prop + late_registrants + tch_prop + votes_perc_sanders_demprim + votes_perc_other_demprim + turnout_perc_reprim + votes_perc_other_reprim + oth.perc2012 + tch_prop_reprim_diff) #+ dem.perc2012)
# ols1 = lm(model_formula, data = model.o.df, na.action = na.exclude)
# summary(ols1)
# AIC(ols1)
ols2 <- ols(model_formula, data=model.o.df, x=TRUE, y=TRUE)
# print(ols2)
# Second, the cluster-robust covariance is called
cov <- robcov(ols2, cluster=model.o.df$county)
print(cov)
# print(cov$var)
# AIC(cov)
corr.table = with(
model.o.df,
data.frame(
turnout_change_1216,
muni.dense,
tch_prop,
inc_2015,
pct_graduate
)
)
colnames(corr.table) = abbreviate( colnames(corr.table), minlength = 16 )
correlationmatrix = cor(corr.table, use = "pairwise.complete.obs")
corrplot.all = corrplot(correlationmatrix, method = "number", type = "upper")
model.o.df$inc_levels = as.factor(model.o.df$inc_levels)
model.o.df$tch_prop_split = as.factor(model.o.df$tch_prop_split)
model.o.df$density_levels = as.factor(model.o.df$density_levels)
dem.tchuse.density.percvote = ggplot(data = model.o.df[                 !is.na(model.o.df$tch_prop)& !is.na(model.o.df$inc_levels),],
aes(x = tch_prop,
y = turnout_change_1216, colour = inc_levels,
group = inc_levels)) +
#shape = factor(tch_model_off))) +
geom_point(alpha = 0.3,stroke = 2,pch = 21) +
geom_smooth(alpha = 0.5,size = 1) +
scale_y_continuous(name = "Turnout percent change 2012 - 2016 (%)") +
scale_x_continuous(name = "Proportion of votes from use of Sequoia AVC Edge voting machines")+
# scale_fill_discrete(name = "
#                     Population density (ppl / km2) in municipality (log, people / km)") +
scale_colour_discrete(name = "Per capita income") +
facet_wrap(~inc_levels,nrow=1) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
dem.tchuse.density.percvote
tch.dem.change.melt = with(model.o.df[!is.na(model.o.df$tch_prop)  & !is.na(model.o.df$inc_levels) & !is.na(model.o.df$tch_prop_split),], melt(data.frame(inc_levels, density_levels,tch_prop_split,turnout_change_1216)))
#   tch.dem.change.cast.simple = dcast(tch.dem.change.melt, tch_prop_split ~variable, mean,na.rm=T)
# colnames(tch.dem.change.cast.simple) = c("AVC Edge machines used by > 25% of voters?","Change in Turnout percent (%)")
# kable(tch.dem.change.cast.simple,digits = 1, format = "markdown",padding = 0, align = "c")
tch.dem.change.cast = dcast(tch.dem.change.melt, inc_levels+tch_prop_split ~variable, mean,na.rm=T)
colnames(tch.dem.change.cast) = c("Per capita income 2011-2015","AVC Edge machines used by > 25% of voters?","Change in Turnout percent (%)")
kable(tch.dem.change.cast,digits = 1, format = "markdown",padding = 0, align = "c")
model.o.df$grad_levels = as.factor(model.o.df$grad_levels)
model.o.df$tch_prop_split = as.factor(model.o.df$tch_prop_split)
model.o.df$density_levels = as.factor(model.o.df$density_levels)
dem.tchuse.density.percvote = ggplot(data = model.o.df[                 !is.na(model.o.df$tch_prop)& !is.na(model.o.df$grad_levels),],
aes(x = tch_prop,
y = turnout_change_1216, colour = grad_levels,
group = grad_levels)) +
#shape = factor(tch_model_off))) +
geom_point(alpha = 0.3,stroke = 2,pch = 21) +
geom_smooth(alpha = 0.5,size = 1) +
scale_y_continuous(name = "Turnout percent change 2012 - 2016 (%)") +
scale_x_continuous(name = "Proportion of votes from use of Sequoia AVC Edge voting machines")+
# scale_fill_discrete(name = "
#                     Population density (ppl / km2) in municipality (log, people / km)") +
scale_colour_discrete(name = "% university graduates") +
facet_wrap(~grad_levels,nrow=1) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
dem.tchuse.density.percvote
tch.dem.change.melt = with(model.o.df[!is.na(model.o.df$tch_prop) & !is.na(model.o.df$grad_levels) & !is.na(model.o.df$tch_prop_split),], melt(data.frame(grad_levels, density_levels,tch_prop_split,turnout_change_1216)))
#   tch.dem.change.cast.simple = dcast(tch.dem.change.melt, tch_prop_split ~variable, mean,na.rm=T)
# colnames(tch.dem.change.cast.simple) = c("AVC Edge machines used by > 25% of voters?","Change in Turnout percent (%)")
# kable(tch.dem.change.cast.simple,digits = 1, format = "markdown",padding = 0, align = "c")
tch.dem.change.cast = dcast(tch.dem.change.melt, grad_levels+tch_prop_split ~variable, mean,na.rm=T)
colnames(tch.dem.change.cast) = c("% university graduates","AVC Edge machines used by > 25% of voters?","Change in Turnout percent (%)")
kable(tch.dem.change.cast,digits = 1, format = "markdown",padding = 0, align = "c")
model.o.df$grad_levels = as.factor(model.o.df$grad_levels)
model.o.df$tch_prop_split = as.factor(model.o.df$tch_prop_split)
model.o.df$density_levels = as.factor(model.o.df$density_levels)
dem.tchuse.density.percvote = ggplot(data = model.o.df[!is.na(model.o.df$density_levels) &                  !is.na(model.o.df$tch_prop)& !is.na(model.o.df$density_levels),],
aes(x = tch_prop,
y = turnout_change_1216, colour = density_levels,
group = density_levels)) +
#shape = factor(tch_model_off))) +
geom_point(alpha = 0.3,stroke = 2,pch = 21) +
geom_smooth(alpha = 0.5,size = 1) +
scale_y_continuous(name = "Turnout percent change 2012 - 2016 (%)") +
scale_x_continuous(name = "Proportion of votes from use of Sequoia AVC Edge voting machines")+
# scale_fill_discrete(name = "
#                     Population density (ppl / km2) in municipality (log, people / km)") +
scale_colour_discrete(name = "Population density (ppl / km2)") +
facet_wrap(~density_levels,nrow=1) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
dem.tchuse.density.percvote
tch.dem.change.melt = with(model.o.df[!is.na(model.o.df$tch_prop) & !is.na(model.o.df$density_levels) & !is.na(model.o.df$tch_prop_split),], melt(data.frame(density_levels, density_levels,tch_prop_split,turnout_change_1216)))
#   tch.dem.change.cast.simple = dcast(tch.dem.change.melt, tch_prop_split ~variable, mean,na.rm=T)
# colnames(tch.dem.change.cast.simple) = c("AVC Edge machines used by > 25% of voters?","Change in Turnout percent (%)")
# kable(tch.dem.change.cast.simple,digits = 1, format = "markdown",padding = 0, align = "c")
tch.dem.change.cast = dcast(tch.dem.change.melt, density_levels+tch_prop_split ~variable, mean,na.rm=T)
colnames(tch.dem.change.cast) = c("Population density (ppl / km2)","AVC Edge machines used by > 25% of voters?","Change in Turnout percent (%)")
kable(tch.dem.change.cast,digits = 1, format = "markdown",padding = 0, align = "c")
model.o.df$turnout_reg_feb
model.o.df$turnout_reg_2012
model.o.df$turnout_perc_reprim
model.o.df$turnout_reg_feb
model.o.df$turnout_change_prim
knitr::opts_chunk$set(echo = FALSE)
# Custom css styling above from: https://support.rstudio.com/hc/en-us/community/posts/200655456-Custom-styling-when-knitting-html-
# setwd("https://github.com/Sean-Case/WisconsinElection2016")
require(dplyr);require(plyr); require(ggplot2); require(nlme); require(car); require(reshape2); require(Hmisc);require(knitr); require(corrplot); require(rms); require(effects); require(tidyr);
require(ReporteRs); require(docxtractr)
setwd("C:\\Users\\s_cas\\Dropbox\\Perso\\2016 voting election county results\\Wisconsin\\Model Refinement Feb 2016\\")
getwd()
# https://www.r-bloggers.com/using-and-interpreting-different-contrasts-in-linear-models-in-r/
# options(contrasts=c('contr.sum','contr.poly'))
options(contrasts=c('contr.treatment','contr.poly'))
model.o.df = read.csv("modeldfward.o.csv",stringsAsFactors = F)
model.o.df$demwinner2012 = with(model.o.df, ifelse(demwinner2012 == 1 , "Yes", model.o.df$demwinner2012))
model.o.df$demwinner2012 = with(model.o.df, ifelse(demwinner2012 == 0, "No", model.o.df$demwinner2012))
model.o.df$tch_prop_split = with(model.o.df, ifelse(tch_prop < 0.25, 0, 1))
model.o.df$turnout_highlow = with(model.o.df, ifelse(turnout_reg_feb <= 0.85, 0, 1))
model.o.df$density_levels = with(model.o.df, ifelse(muni.dense < 50, "< 50", 1))
model.o.df$density_levels = with(model.o.df, ifelse(muni.dense >= 50, "50 - 200", model.o.df$density_levels))
model.o.df$density_levels = with(model.o.df, ifelse(muni.dense >= 200, "Two hundred +", model.o.df$density_levels))
# model.o.df$vote_levels = with(model.o.df, ifelse(total_ballots < 500, "< 500", 1))
# model.o.df$vote_levels = with(model.o.df, ifelse(total_ballots >= 500, "500 - 1000", 1))
# model.o.df$vote_levels = with(model.o.df, ifelse(total_ballots >= 1000, "1000 +", model.o.df$vote_levels))
# # model.o.df$vote_levels = ordered(model.o.df$vote_levels,levels = c("< 500","500 - 1000","1000 +"))
#
model.o.df$turnout_levels = with(model.o.df, ifelse(turnout_reg_feb < .80, "< 80", 1))
model.o.df$turnout_levels = with(model.o.df, ifelse(turnout_reg_feb >= .80, "80 - 89", model.o.df$turnout_levels))
model.o.df$turnout_levels = with(model.o.df, ifelse(turnout_reg_feb >= .90, "90 - 94", model.o.df$turnout_levels))
model.o.df$turnout_levels = with(model.o.df, ifelse(turnout_reg_feb >= .95, "95 +", model.o.df$turnout_levels))
model.o.df$inc_levels = NA
model.o.df$inc_levels = with(model.o.df, ifelse(inc_2015 < median(inc_2015,na.rm=T), "Below median", model.o.df$inc_levels))
model.o.df$inc_levels = with(model.o.df, ifelse(inc_2015 >= median(inc_2015,na.rm=T), "Higher than median", model.o.df$inc_levels))
model.o.df$grad_levels = NA
model.o.df$grad_levels = with(model.o.df, ifelse(pct_graduate < median(pct_graduate,na.rm=T), "Below median", model.o.df$grad_levels))
model.o.df$grad_levels = with(model.o.df, ifelse(pct_graduate >= median(pct_graduate,na.rm=T), "Higher than median", model.o.df$grad_levels))
model.o.df$most_likely_places = with(model.o.df, ifelse(muni.dense > 200 & tch_prop_split == 1 & tch_model_off_full == "Dominion (Sequoia)/Command Central-Edge",1,0))
model.o.df$tch_model_off[model.o.df$tch_model_off == "Dominion (Sequoia)/Command Central-Edge; ES&S Automark"] = "Dominion (Sequoia)/Command Central-Edge"
model.o.df$tch_model_off_full[model.o.df$tch_model_off_full == "Dominion (Sequoia)/Command Central-Edge; ES&S Automark"] = "Dominion (Sequoia)/Command Central-Edge"
model.o.df = subset(model.o.df, tch_model_off_full == "Dominion (Sequoia)/Command Central-Edge" | tch_model_off_full == "aNone")
# remove "Dominion (Premier)-Accuvote TSX"
model.o.df$tch_model_off_true = NA
model.o.df$tch_model_off_true = ifelse(model.o.df$tch_prop > 0 & !is.na(model.o.df$tch_use_off_true), model.o.df$tch_model_off_full, "aNone")
model.o.df$turnout_reg_feb[model.o.df$turnout_reg_feb > 1] = 1;
model.o.df$turnout_perc_reprim[model.o.df$turnout_perc_reprim > 1] = 1
model.o.df$tch_prop = ifelse(model.o.df$tch_prop > 1 & model.o.df$tch_model_off_full == "aNone",NA,model.o.df$tch_prop)
# model.o.df$turnout_reg_feb[model.o.df$turnout_reg_feb < 0.6] = NA
model.o.df$sameday_reg_prop[model.o.df$sameday_reg_prop > 1] = NA
model.o.df$counted_absent_prop[model.o.df$counted_absent_prop > 1] = NA
model.o.df$rejected_absent_prop[model.o.df$rejected_absent_prop > 1] = NA
model.o.df$late_registrants[model.o.df$late_registrants > 1] = NA
model.o.df$sameday_reg_prop = log(model.o.df$sameday_reg_prop + 1) # Because there are a few big large outliers
model.o.df$counted_absent_prop = log(model.o.df$counted_absent_prop + 1)
model.o.df$rejected_absent_prop = log(model.o.df$rejected_absent_prop + 1)
model.o.df[model.o.df == Inf] = NA
model.o.df[model.o.df == -Inf] = NA
model.o.df$trump_vote_change = model.o.df$republican_votes.perc - model.o.df$votes_perc_trump
model.o.df$tch_prop_split = with(model.o.df, ifelse(tch_prop_split == 1 , "Yes", model.o.df$tch_prop_split))
model.o.df$tch_prop_split = with(model.o.df, ifelse(tch_prop_split == 0, "No", model.o.df$tch_prop_split))
model.o.df$turnout_reg_2012 = model.o.df$turnout_reg_2012*100
model.o.df$turnout_perc_reprim = model.o.df$turnout_perc_reprim*100
model.o.df$turnout_reg_feb = model.o.df$turnout_reg_feb*100
model.o.df$turnout_change_1216 = model.o.df$turnout_reg_feb - model.o.df$turnout_reg_2012
model.o.df$turnout_change_prim = model.o.df$turnout_reg_feb - model.o.df$turnout_perc_reprim
tch.model.o.df = subset(model.o.df, tch_prop > 0)
tch.model.o.df[tch.model.o.df == -Inf] = NA
tch.model.o.df[tch.model.o.df == Inf] = NA
tch.model.o.df$tch_model_off_full = as.factor(as.character(tch.model.o.df$tch_model_off_full))
model.o.df$turnout_change_1216
model.o.df$turnout_change_prim
model.o.df$turnout_perc_reprim
model.o.df$turnout_change_prim = model.o.df$turnout_reg_feb - model.o.df$turnout_perc_reprim
model.o.df$turnout_change_prim
model.o.df$turnout_reg_feb
model.o.df$turnout_perc_reprim
knitr::opts_chunk$set(echo = FALSE)
# Custom css styling above from: https://support.rstudio.com/hc/en-us/community/posts/200655456-Custom-styling-when-knitting-html-
# setwd("https://github.com/Sean-Case/WisconsinElection2016")
require(dplyr);require(plyr); require(ggplot2); require(nlme); require(car); require(reshape2); require(Hmisc);require(knitr); require(corrplot); require(rms); require(effects); require(tidyr);
require(ReporteRs); require(docxtractr)
setwd("C:\\Users\\s_cas\\Dropbox\\Perso\\2016 voting election county results\\Wisconsin\\Model Refinement Feb 2016\\")
getwd()
# https://www.r-bloggers.com/using-and-interpreting-different-contrasts-in-linear-models-in-r/
# options(contrasts=c('contr.sum','contr.poly'))
options(contrasts=c('contr.treatment','contr.poly'))
model.o.df = read.csv("modeldfward.o.csv",stringsAsFactors = F)
model.o.df$tch_prop = ifelse(model.o.df$tch_prop > 1,1,model.o.df$tch_prop)
model.o.df$demwinner2012 = with(model.o.df, ifelse(demwinner2012 == 1 , "Yes", model.o.df$demwinner2012))
model.o.df$demwinner2012 = with(model.o.df, ifelse(demwinner2012 == 0, "No", model.o.df$demwinner2012))
model.o.df$tch_prop_split = with(model.o.df, ifelse(tch_prop < 0.25, 0, 1))
model.o.df$turnout_highlow = with(model.o.df, ifelse(turnout_reg_feb <= 0.85, 0, 1))
model.o.df$density_levels = with(model.o.df, ifelse(muni.dense < 50, "< 50", 1))
model.o.df$density_levels = with(model.o.df, ifelse(muni.dense >= 50, "50 - 200", model.o.df$density_levels))
model.o.df$density_levels = with(model.o.df, ifelse(muni.dense >= 200, "Two hundred +", model.o.df$density_levels))
# model.o.df$vote_levels = with(model.o.df, ifelse(total_ballots < 500, "< 500", 1))
# model.o.df$vote_levels = with(model.o.df, ifelse(total_ballots >= 500, "500 - 1000", 1))
# model.o.df$vote_levels = with(model.o.df, ifelse(total_ballots >= 1000, "1000 +", model.o.df$vote_levels))
# # model.o.df$vote_levels = ordered(model.o.df$vote_levels,levels = c("< 500","500 - 1000","1000 +"))
#
model.o.df$turnout_levels = with(model.o.df, ifelse(turnout_reg_feb < .80, "< 80", 1))
model.o.df$turnout_levels = with(model.o.df, ifelse(turnout_reg_feb >= .80, "80 - 89", model.o.df$turnout_levels))
model.o.df$turnout_levels = with(model.o.df, ifelse(turnout_reg_feb >= .90, "90 - 94", model.o.df$turnout_levels))
model.o.df$turnout_levels = with(model.o.df, ifelse(turnout_reg_feb >= .95, "95 +", model.o.df$turnout_levels))
model.o.df$above_mean_tch = with(model.o.df, ifelse(republican_votes.perc >
mean(republican_votes.perc[tch_prop == 0],na.rm=T), "Greater", "Less"))
model.o.df$inc_levels = NA
model.o.df$inc_levels = with(model.o.df, ifelse(inc_2015 < median(inc_2015,na.rm=T), "Below median", model.o.df$inc_levels))
model.o.df$inc_levels = with(model.o.df, ifelse(inc_2015 >= median(inc_2015,na.rm=T), "Higher than median", model.o.df$inc_levels))
model.o.df$grad_levels = NA
model.o.df$grad_levels = with(model.o.df, ifelse(pct_graduate < median(pct_graduate,na.rm=T), "Below median", model.o.df$grad_levels))
model.o.df$grad_levels = with(model.o.df, ifelse(pct_graduate >= median(pct_graduate,na.rm=T), "Higher than median", model.o.df$grad_levels))
model.o.df$most_likely_places = with(model.o.df, ifelse(muni.dense > 200 & tch_prop_split == 1 & tch_model_off_full == "Dominion (Sequoia)/Command Central-Edge",1,0))
model.o.df$tch_model_off[model.o.df$tch_model_off == "Dominion (Sequoia)/Command Central-Edge; ES&S Automark"] = "Dominion (Sequoia)/Command Central-Edge"
model.o.df$tch_model_off_full[model.o.df$tch_model_off_full == "Dominion (Sequoia)/Command Central-Edge; ES&S Automark"] = "Dominion (Sequoia)/Command Central-Edge"
model.o.df = subset(model.o.df, tch_model_off_full == "Dominion (Sequoia)/Command Central-Edge" | tch_model_off_full == "aNone")
# remove "Dominion (Premier)-Accuvote TSX"
model.o.df$tch_model_off_true = NA
model.o.df$tch_model_off_true = ifelse(model.o.df$tch_prop > 0 & !is.na(model.o.df$tch_use_off_true), model.o.df$tch_model_off_full, "aNone")
model.o.df$turnout_reg_feb[model.o.df$turnout_reg_feb > 1] = 1; model.o.df$tch_prop = ifelse(model.o.df$tch_prop > 1 & model.o.df$tch_model_off_full == "aNone",NA,model.o.df$tch_prop)
# model.o.df$turnout_reg_feb[model.o.df$turnout_reg_feb < 0.6] = NA
model.o.df$sameday_reg_prop[model.o.df$sameday_reg_prop > 1] = NA
model.o.df$counted_absent_prop[model.o.df$counted_absent_prop > 1] = NA
model.o.df$rejected_absent_prop[model.o.df$rejected_absent_prop > 1] = NA
model.o.df$late_registrants[model.o.df$late_registrants > 1] = NA
model.o.df$sameday_reg_prop = log(model.o.df$sameday_reg_prop + 1) # Because there are a few big large outliers
model.o.df$counted_absent_prop = log(model.o.df$counted_absent_prop + 1)
model.o.df$rejected_absent_prop = log(model.o.df$rejected_absent_prop + 1)
model.o.df[model.o.df == Inf] = NA
model.o.df[model.o.df == -Inf] = NA
model.o.df$trump_vote_change = model.o.df$republican_votes.perc - model.o.df$votes_perc_trump
model.o.df$tch_prop_split = with(model.o.df, ifelse(tch_prop_split == 1 , "Yes", model.o.df$tch_prop_split))
model.o.df$tch_prop_split = with(model.o.df, ifelse(tch_prop_split == 0, "No", model.o.df$tch_prop_split))
tch.model.o.df = subset(model.o.df, tch_prop > 0)
tch.model.o.df[tch.model.o.df == -Inf] = NA
tch.model.o.df[tch.model.o.df == Inf] = NA
tch.model.o.df$tch_model_off_full = as.factor(as.character(tch.model.o.df$tch_model_off_full))
model.o.df$os_use_off = as.factor(model.o.df$os_use_off)
model.o.df$tch_use_off_true = as.factor(model.o.df$tch_use_off_true)
model.o.df$county = as.factor(model.o.df$county)
model.o.df$demwinner2012 = as.factor(model.o.df$demwinner2012)
model.o.df$tch_prop_split = as.factor(model.o.df$tch_prop_split)
model.o.df$density_levels = as.factor(model.o.df$density_levels)
model.o.df$turnout_levels = as.factor(model.o.df$turnout_levels)
dem.tchuse.density.percvote = ggplot(data = model.o.df[                  !is.na(model.o.df$tch_prop)& !is.na(model.o.df$demwinner2012),],
aes(x = tch_prop,
y = rep.change.perc, colour = demwinner2012,
group = demwinner2012)) +
#shape = factor(tch_model_off))) +
geom_point(alpha = 0.3,stroke = 2,pch = 21) +
geom_smooth(alpha = 0.5,size = 1) +
scale_y_continuous(name = "Republican vote change 2012 - 2016 (%)") +
scale_x_continuous(name = "Proportion of votes from use of Sequoia AVC Edge voting machines")+
# scale_fill_discrete(name = "
#                     Population density (ppl / km2) in municipality (log, people / km)") +
scale_colour_discrete(name = "Won by Democrats in 2012") +
#facet_wrap(~demwinner2012,nrow=1) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
dem.tchuse.density.percvote
tch.dem.change.melt = with(model.o.df[!is.na(model.o.df$tch_prop) & !is.na(model.o.df$demwinner2012) & !is.na(model.o.df$tch_prop_split),], melt(data.frame(demwinner2012, density_levels,tch_prop_split,rep.change.perc)))
tch.dem.change.cast.simple = dcast(tch.dem.change.melt, tch_prop_split ~variable, mean,na.rm=T)
colnames(tch.dem.change.cast.simple) = c("AVC Edge machines used by > 25% of voters?","Change in Republican vote (%)")
kable(tch.dem.change.cast.simple,digits = 1, format = "markdown",padding = 0, align = "c")
tch.dem.change.cast = dcast(tch.dem.change.melt, demwinner2012+tch_prop_split ~variable, mean,na.rm=T)
colnames(tch.dem.change.cast) = c("Won by Democrats in 2012","AVC Edge machines used by > 25% of voters?","Change in Republican vote (%)")
kable(tch.dem.change.cast,digits = 1, format = "markdown",padding = 0, align = "c")
